<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        cF+0It59nQDt1K9KMozlHurpeTQRZ6tiFA9L/aXf4b6ehydXlnEos+ebivMMpJgFGv5QIsKnfXUg798Z
        /hcRqOBUIqIsbldauUwqPvRpUsKH7Zz9RE3VF23TyOlkxD3sw/BVPMvcy1ZkBHJU/miiWloNafA73X7o
        XO2W3gjDL3omX1ScZyDFLNDwMBFBewWviGbWBn2GiYLunU3EUXtZD9vEFYyB0OAkMXtJQ4b/ETOuRYFF
        WD592LatzfjLlWf7DLiC83o/ZsOfl+2+xzoaGYk4WxUVyxMOfQ/39owSsV1nu9rXEzdxg89sNxM2ep4f
        VJxnIMUs2PBDRzJh4IWzKLqXlYiPMA0y+MxW/dPsRd8Zrj01EWkoJ6pDsbQa0uD7SCI+wnbGVXGegRSz
        QOP7rV4GbUZbChh0L0pEmSAoOzq3nYETxXJgw5ez8dnX6iOGP93CtSiQT2+FlaGcM6vi8AfqyuB/uv3Q
        +SyU/wrsx69yVZxnIMUsaOjE1cDm4BEmHgf/9GyNFnzak+4I/x82wzMD6uI5gXXy3Hdmm8X28r6ln0sp
        w73t7d3ZpGxjNfxVCG2/ru5nPy/9skYZymI9sz6wzcurIQ3+p9sPnRMDnwvrU/cq2rO8aZ+K8wykmMWf
        YnwYoJ3JCB8QA6J9vpx4M+vqaDBR+8+nAtm2jSkn2jZ+fJakfQ5fzqk4z0CKxphapGiMqUWKxphapGiM
        qUWKxphapGiMqUWKxphapGiMqUWKxphapGiMqUWKxphapGiMqUWKxphapGiMqUWKxphapGiMqUWKxpha
        pGiMqUWKxphapGiMqUWKxphapGiMqUWKxphapGiMqUWKxphapGiMqUWKxphapGiMqUWKxphapGiMqUWK
        xphapGiMqUWKxphapGiMqUWKxphapGiMqUWKxphapGiMqUWKxphapGiMqeT1zf8niBr5CfU9IgAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>